services:
  postgres-dev:
    image: postgres:16-alpine
    container_name: geosegbar-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: ${TZ}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - geosegbar-network

  redis-dev:
    image: redis:7-alpine
    container_name: geosegbar-redis-dev
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-dev-data:/data
    command: redis-server --save 60 1 --loglevel warning --maxmemory ${REDIS_MAXMEMORY} --maxmemory-policy volatile-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - geosegbar-network

  geosegbar-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: geosegbar-api
    restart: unless-stopped
    depends_on:
      postgres-dev:
        condition: service_healthy
      redis-dev:
        condition: service_healthy
    ports:
      - "${SERVER_PORT}:9090"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - TZ=${TZ}
      - JAVA_OPTS=${JAVA_OPTS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - FILE_UPLOAD_DIR=${FILE_UPLOAD_DIR}
      - FILE_BASE_URL=${FILE_BASE_URL}
      - FILE_PSB_DIR=${FILE_PSB_DIR}
      - FRONTEND_URL=${FRONTEND_URL}
      - ANA_API_IDENTIFIER=${ANA_API_IDENTIFIER}
      - ANA_API_PASSWORD=${ANA_API_PASSWORD}
      - ANA_API_AUTH_URL=${ANA_API_AUTH_URL}
      - ANA_API_TELEMETRY_URL=${ANA_API_TELEMETRY_URL}
    volumes:
      - ./storage-dev:${FILE_UPLOAD_DIR}
      - ./logs:/app/logs
    networks:
      - geosegbar-network

networks:
  geosegbar-network:
    driver: bridge

volumes:
  postgres-dev-data:
    driver: local
  redis-dev-data:
    driver: local
